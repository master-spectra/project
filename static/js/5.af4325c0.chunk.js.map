{"version":3,"sources":["component/users/user/user.module.scss","component/users/users.module.scss","component/users/pagination/pageNation.module.scss","component/users/user/button/GetButtonConteiner.js","component/users/user/button/GetButton.js","component/users/user/User.js","component/users/user/UserArrays.js","component/users/pagination/Pagenator.js","component/users/Users.js","component/users/UsersConteiner.js"],"names":["module","exports","GetButtonConteiner","connect","state","isFollow","getIsFollowSelect","dispatch","following","id","followingThunkCreator","unFollowing","unFollowingThunkCreator","profile","followed","Loader","className","userStyle","btnFollowing","onClick","User","user","otherItem","to","img","src","Logo","alt","information","aboutUser","name","about","status","location","country","city","UsersArrays","usersList","map","item","photos","small","Pagenator","pageSize","totalUserCount","currentPage","changePage","getUsersThunk","countPage","Math","ceil","pageList","copyCurrentPage","i","push","onPageChanged","pageNumber","pageArray","index","min","max","UsersStyle","selectedItem","requestOnPrevPage","type","length","prev","next","Users","props","listPage","UsersAPI","isFetching","useEffect","UsersConteiner","getUsersSelect","getTotalUserCountSelect","getPageSizeSelect","getCurrentPageSelect","getIsFetchingSelect","newPage","changePageActionCreator","getUsersThunkCreator"],"mappings":"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","file":"static/js/5.af4325c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__OJuA2\",\"otherItem\":\"user_otherItem__5Pcr_\",\"img\":\"user_img__2PVwb\",\"btnFollowing\":\"user_btnFollowing__217JZ\",\"information\":\"user_information__2MV5q\",\"location\":\"user_location__1P-VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listPage\":\"users_listPage__VnQOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedItem\":\"pageNation_selectedItem__2HrqX\"};","import {connect} from \"react-redux\";\r\nimport {GetButton} from \"./GetButton\";\r\nimport {followingThunkCreator, unFollowingThunkCreator} from \"../../../../state/reducers/usersReducer\";\r\nimport {getIsFollowSelect} from \"../../../../utils/reselect/reselect\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFollow: getIsFollowSelect(state)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        following: id => {\r\n            dispatch(followingThunkCreator(id));\r\n        },\r\n        unFollowing: id => {\r\n            dispatch(unFollowingThunkCreator(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport const GetButtonConteiner = connect(mapStateToProps, mapDispatchToProps)(GetButton);","import React from \"react\";\r\nimport userStyle from \"../user.module.scss\";\r\nimport {Loader} from \"../../../loader/Loader\";\r\n\r\nexport const GetButton = ({profile, following, unFollowing, isFollow}) => {\r\n    if (profile.followed) {\r\n        if (isFollow) {\r\n            return <Loader/>;\r\n        };\r\n\r\n        return <button className={userStyle.btnFollowing} onClick={() => unFollowing(profile.id)}>UnFollow</button>;\r\n    };\r\n\r\n    if (!isFollow) {\r\n        return <button className={userStyle.btnFollowing} onClick={() => following(profile.id)}>Follow</button>;\r\n    };\r\n\r\n    return <Loader/>;\r\n};","import React from \"react\";\nimport userStyle from \"./user.module.scss\"\nimport Logo from \"../../../media/logo.jpg\";\nimport {NavLink} from \"react-router-dom\";\nimport {GetButtonConteiner} from \"./button/GetButtonConteiner\";\n\nexport const User = ({profile}) => {\n    return (\n        <div className={userStyle.user}>\n            <div className={userStyle.otherItem}>\n                <NavLink to={`/profile/${profile.id}`}>\n                    <img className={userStyle.img} src={profile.img ? profile.img : Logo} alt={\"#\"}/>\n                </NavLink>\n                <GetButtonConteiner profile={profile}/>\n            </div>\n            <div className={userStyle.information}>\n                <div className={userStyle.aboutUser}>\n                    <p className={userStyle.name}>{profile.name}</p>\n                    <p className={userStyle.about}>О пользователе: {profile.status}</p>\n                </div>\n                <div className={userStyle.location}>\n                    <p className={userStyle.country}>Страна: неизвестно</p>\n                    <p className={userStyle.city}>Город: неизвестно</p>\n                </div>\n            </div>\n        </div>\n    );\n};","import {User} from \"./User\";\r\nimport React from \"react\";\r\n\r\nexport const UsersArrays = ({usersList}) => {\r\n    return (\r\n        usersList.map(item => {\r\n            const profile = {\r\n                name: item.name,\r\n                img: item.photos.small,\r\n                status: item.status,\r\n                id: item.id,\r\n                followed: item.followed\r\n            };\r\n\r\n            return (\r\n                <User\r\n                    key={profile.id}\r\n                    profile={profile}\r\n                />\r\n            );\r\n        })\r\n    );\r\n};\r\n","import UsersStyle from \"./pageNation.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const Pagenator = ({pageSize, totalUserCount, currentPage, changePage, getUsersThunk}) => {\r\n    const countPage     = Math.ceil(totalUserCount / pageSize);\r\n    const pageList      = [];\r\n\r\n    let copyCurrentPage = currentPage;\r\n\r\n    for (let i = 1; i <= countPage; i++) {\r\n        pageList.push(i);\r\n    };\r\n\r\n    const onPageChanged = pageNumber => {\r\n        changePage(pageNumber);\r\n        getUsersThunk(pageNumber, pageSize);\r\n    };\r\n\r\n    const pageArray = pageList.map((item, index) => {\r\n        if (currentPage > 5) {\r\n            const min       = currentPage - 5;\r\n            const max       = currentPage + 5;\r\n            const length    = max - min;\r\n\r\n            return item >= min && item < max && length === 10 ? <span className={currentPage === item ? UsersStyle.selectedItem : null} onClick={() => onPageChanged(item)} key={index}>{item}</span> : null\r\n        };\r\n\r\n        return item < 11 ? <span className={currentPage === item ? UsersStyle.selectedItem : null} onClick={() => onPageChanged(item)} key={index}>{item}</span> : null\r\n    });\r\n\r\n    const requestOnPrevPage = type => {\r\n        if (copyCurrentPage > 1 && type === \"prev\") {\r\n            onPageChanged(--copyCurrentPage, 5);\r\n            return null;\r\n        };\r\n\r\n        if (copyCurrentPage === 1 && type === \"prev\") {\r\n            copyCurrentPage = pageList.length;\r\n            onPageChanged(copyCurrentPage, 5);\r\n\r\n            return null;\r\n        };\r\n\r\n        if (copyCurrentPage === pageList.length && type === \"next\") {\r\n            copyCurrentPage = 1;\r\n            onPageChanged(copyCurrentPage, 5);\r\n\r\n            return null;\r\n        };\r\n\r\n        onPageChanged(++copyCurrentPage, 5);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button className={UsersStyle.prev} onClick={() => requestOnPrevPage(\"prev\")}>Prev</button>\r\n            {pageArray}\r\n            <button className={UsersStyle.next} onClick={() => requestOnPrevPage(\"next\")}>Next</button>\r\n        </>\r\n    );\r\n};","import React from \"react\";\nimport UsersStyle from \"./users.module.scss\";\nimport {UsersArrays} from \"./user/UserArrays\";\nimport {Pagenator} from \"./pagination/Pagenator\";\n\nexport const Users = props => {\n    const {usersList} = props;\n\n    return (\n        <div>\n            <div className={UsersStyle.listPage}><Pagenator {...props}/></div>\n            <div><UsersArrays usersList={usersList}/></div>\n        </div>\n    );\n};","import {connect} from \"react-redux\";\nimport React, {useEffect} from \"react\";\nimport {Loader} from \"../loader/Loader\";\nimport {Users} from \"./Users\";\nimport {changePageActionCreator, getUsersThunkCreator} from \"../../state/reducers/usersReducer\";\nimport {\n    getCurrentPageSelect,\n    getIsFetchingSelect,\n    getPageSizeSelect,\n    getTotalUserCountSelect,\n    getUsersSelect,\n} from \"../../utils/reselect/reselect\";\n\nexport const UsersAPI = props => {\n    const {isFetching, currentPage, pageSize, getUsersThunk} = props;\n\n    useEffect(() => {\n        getUsersThunk(currentPage, pageSize);\n    }, []);\n\n    return isFetching ? <Loader/> : <Users {...props}/>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        usersList: getUsersSelect(state),\n        totalUserCount: getTotalUserCountSelect(state),\n        pageSize: getPageSizeSelect(state),\n        currentPage: getCurrentPageSelect(state),\n        isFetching: getIsFetchingSelect(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changePage: newPage => {\n            dispatch(changePageActionCreator(newPage));\n        },\n        getUsersThunk: (currentPage, pageSize) => {\n            dispatch(getUsersThunkCreator(currentPage, pageSize));\n        }\n    };\n};\n\nconst UsersConteiner = connect(mapStateToProps, mapDispatchToProps)(UsersAPI);\nexport default UsersConteiner;"],"sourceRoot":""}