{"version":3,"sources":["component/profile/user/user.module.scss","component/profile/user/status/status.module.scss","component/profile/myPost/myPost.module.scss","component/profile/profileForm/postForm.module.scss","component/profile/user/UserInfo/changeProfileForm/ChangeProfileForm.js","component/profile/user/profileInfo/ProfileInfo.js","component/profile/user/status/StatusConteiner.js","component/profile/user/status/Status.js","component/profile/user/userForm/UserForm.js","component/profile/user/UserInfo/UserInfoConteiner.js","component/profile/user/UserInfo/UserInfo.js","component/profile/user/UserConteiner.js","component/profile/user/User.js","component/profile/myPost/MyPost.js","component/profile/myPost/MyPostArrays.js","component/profile/profileForm/postForm.js","component/profile/Profile.js","component/profile/ProfileConteiner.js","utils/validate/validate.js"],"names":["module","exports","ChangeProfileForm","onSubmit","userId","photos","initialValues","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","vk","facebook","github","validationSchema","setProfileDataValidation","style","display","gridTemplateColumns","name","placeholder","margin","component","type","getInfo","item","ProfileInfo","currentProfile","className","UserStyle","userInfo","StatusConteiner","connect","state","status","getStatusSelect","useState","editMode","setEditMode","value","resetForm","setStatusValidation","Input","btn","onDoubleClick","info","UserForm","updatePhotos","action","onChange","e","target","files","UserInfoConteiner","getCurrentProfileSelect","dispatch","photo","updatePhotosThunkCreator","updateProfile","profile","updateProfileThunkCreator","changeEditMode","updatedProfile","profileWrap","backgroundImage","user","imgUser","src","small","Logo","alt","userInfoWrap","id","onClick","UserConteiner","updateStatus","updateStatusThunkCreator","formData","Loader","MyPost","postData","post","React","createRef","ref","MyPostStyle","myPost","img","textWrap","text","MyPostArrays","userComment","map","index","comment","PostForm","submittingForm","postText","setPostValidation","formSendPost","formTitle","formInput","formBtn","Profile","addYourMessage","userData","ProfileConteinerAPI","props","match","params","useEffect","getMyProfile","profileThunk","getStatus","isUpdatePhoto","setIsUpdatePhoto","isUpdatedProfile","changeIsUpdatedProfile","ProfileConteiner","compose","getUserCommentSelect","getIdSelect","getIsUpdatePhoto","getIsUpdateProfileSelect","profileThunkCreator","getStatusThunkCreator","getMyProfileOnHeaderThunkCreator","input","textChecker","addPostActionCreator","isUpdate","setUpdatePhotoActionCreator","isUpdated","setIsUpdateProfileActionCreator","withRouter","setSettingCreator","min","max","Yup","required","setStartCreator","setting","shape","setMessageValidation","messageText"],"mappings":"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","file":"static/js/4.12089b88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"user_profileWrap__-W5Zj\",\"backgroundImage\":\"user_backgroundImage__3jOb-\",\"user\":\"user_user__3IDSu\",\"imgUser\":\"user_imgUser__2GiSe\",\"userInfoWrap\":\"user_userInfoWrap__1zVol\",\"userInfo\":\"user_userInfo__2Mpk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"status_status__2Gh1B\",\"info\":\"status_info__7XY46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"myPost_myPost__1HBTl\",\"img\":\"myPost_img__3Q4Yx\",\"textWrap\":\"myPost_textWrap__2IUtZ\",\"text\":\"myPost_text__25K_K\",\"likeWrap\":\"myPost_likeWrap__3APgq\",\"like\":\"myPost_like__Xy2Ov\",\"likeCounter\":\"myPost_likeCounter__V_30l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSendPost\":\"postForm_formSendPost__15P5A\",\"formTitle\":\"postForm_formTitle__13ghg\",\"formInput\":\"postForm_formInput__QDS8N\",\"formBtn\":\"postForm_formBtn__2Rtsb\"};","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {setProfileDataValidation} from \"../../../../../utils/validate/validate\";\r\n\r\nexport const ChangeProfileForm = ({onSubmit, userId, photos}) => {\r\n    return (\r\n        <Formik initialValues={{photos: photos, userId: userId, fullName: \"\", aboutMe: \"\", lookingForAJob: \"\", lookingForAJobDescription: \"\", vk: \"\", facebook: \"\", github: \"\"}} validationSchema={setProfileDataValidation} onSubmit={onSubmit}>\r\n            <Form>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  name={\"fullName\"} placeholder={\"fullName\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"fullName\"}/>\r\n                </div>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"aboutMe\"} placeholder={\"aboutMe\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"aboutMe\"}/>\r\n                </div>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"lookingForAJob\"} placeholder={\"lookingForAJob\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"lookingForAJob\"}/>\r\n                </div>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"lookingForAJobDescription\"} placeholder={\"descriptionJobs\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"lookingForAJobDescription\"}/>\r\n                </div>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"vk\"} placeholder={\"vk\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"vk\"}/>\r\n                </div>\r\n\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"facebook\"} placeholder={\"facebook\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"facebook\"}/>\r\n                </div>\r\n                <div style={{display: \"grid\", gridTemplateColumns: \"200px 1fr\"}}>\r\n                    <Field  component={\"input\"} name={\"github\"} placeholder={\"github\"} style={{display: \"block\", margin: \"10px 0\"}}/>\r\n                    <ErrorMessage name={\"github\"}/>\r\n                </div>\r\n                <button type={\"button\"}></button>\r\n                <button type={\"submit\"}>save changes</button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};","import UserStyle from \"../user.module.scss\";\r\nimport React from \"react\";\r\n\r\nconst getInfo = item => {\r\n    if (item) {\r\n        return item;\r\n    };\r\n\r\n    return \"Неизвестно\";\r\n};\r\n\r\nexport const ProfileInfo = ({currentProfile}) => {\r\n    return  (\r\n        <div>\r\n            <p className={UserStyle.userInfo}>\r\n                {`Имя: ${getInfo(currentProfile.fullName)}`}\r\n            </p>\r\n            <p className={UserStyle.userInfo}>\r\n                {`О мне: ${getInfo(currentProfile.aboutMe)}`}\r\n            </p>\r\n            <p className={UserStyle.userInfo}>\r\n                {`Работа: ${getInfo(currentProfile.lookingForAJob) + \"\"}`}\r\n            </p>\r\n            <p className={UserStyle.userInfo}>\r\n                {`О работе: ${getInfo(currentProfile.lookingForAJobDescription)}`}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {Status} from \"./Status\";\r\nimport {getStatusSelect} from \"../../../../utils/reselect/reselect\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {status: getStatusSelect(state)};\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nexport const StatusConteiner = connect(mapStateToProps, mapDispatchToProps)(Status);","import React, {useState} from \"react\";\r\nimport style from \"./status.module.scss\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {setStatusValidation} from \"../../../../utils/validate/validate\";\r\nimport {Input} from \"../../../common/FormComponent/FormComponent\";\r\n\r\nexport const Status = ({status, onSubmit, userId}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const changeEditMode = () => {\r\n        if (!userId) {\r\n            setEditMode(!editMode);\r\n        };\r\n    };\r\n\r\n    const submitting = (value, {resetForm}) => {\r\n        onSubmit(value);\r\n        resetForm();\r\n        setEditMode(!editMode);\r\n    };\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <div className={style.status} onDoubleClick={changeEditMode}>\r\n                <p className={style.info}>О мне: {status || \"----------------------\"}</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={{status: \"\"}} onSubmit={submitting} validationSchema={setStatusValidation}>\r\n            <Form>\r\n                <ErrorMessage name={\"status\"}/>\r\n                <Field type={\"text\"} name={\"status\"} component={Input}/>\r\n                <button type={\"submit\"} className={style.btn}>Save</button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};","import React from \"react\";\r\n\r\nexport const UserForm = ({updatePhotos}) => {\r\n    return (\r\n        <form action=\"#\">\r\n            <input type=\"file\" onChange={e => updatePhotos(e.target.files[0])}/>\r\n        </form>\r\n    );\r\n};\r\n","import {\r\n    getCurrentProfileSelect,\r\n} from \"../../../../utils/reselect/reselect\";\r\nimport {\r\n    updatePhotosThunkCreator,\r\n    updateProfileThunkCreator,\r\n} from \"../../../../state/reducers/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserInfo} from \"./UserInfo\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentProfile: getCurrentProfileSelect(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updatePhotos: photo => {\r\n            dispatch(updatePhotosThunkCreator(photo))\r\n        },\r\n        updateProfile: profile => {\r\n            dispatch(updateProfileThunkCreator(profile));\r\n        }\r\n    };\r\n};\r\n\r\nexport const UserInfoConteiner = connect(mapStateToProps, mapDispatchToProps)(UserInfo);","import UserStyle from \"../user.module.scss\";\r\nimport Logo from \"../../../../media/logo.jpg\";\r\nimport {ChangeProfileForm} from \"./changeProfileForm/ChangeProfileForm\";\r\nimport {ProfileInfo} from \"../profileInfo/ProfileInfo\";\r\nimport {StatusConteiner} from \"../status/StatusConteiner\";\r\nimport {UserForm} from \"../userForm/UserForm\";\r\nimport React from \"react\";\r\n\r\nexport const UserInfo = ({userId, updatePhotos, currentProfile, editMode, changeEditMode, onSubmit, updatedProfile}) => {\r\n    return (\r\n        <div className={UserStyle.profileWrap}>\r\n            <div className={UserStyle.backgroundImage}></div>\r\n            <div className={UserStyle.user}>\r\n                <div>\r\n                    <img className={UserStyle.imgUser} src={currentProfile.photos && currentProfile.photos.small ? currentProfile.photos.small : Logo} alt={\"#\"}/>\r\n                </div>\r\n                <div className={UserStyle.userInfoWrap}>\r\n                    {editMode ? <ChangeProfileForm photos={currentProfile.photos} userId={currentProfile.id} onSubmit={updatedProfile}/> : <ProfileInfo currentProfile={currentProfile}/>}\r\n                    <StatusConteiner userId={userId} onSubmit={onSubmit}/>\r\n                    {!editMode ? <button onClick={() => changeEditMode(!editMode)}>Change profile info</button> : null}\r\n                    {!userId ? <UserForm updatePhotos={updatePhotos}/> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import {connect} from \"react-redux\";\nimport {User} from \"./User\";\nimport {\n    updateProfileThunkCreator,\n    updateStatusThunkCreator\n} from \"../../../state/reducers/profileReducer\";\nimport {\n    getCurrentProfileSelect,\n} from \"../../../utils/reselect/reselect\";\n\nconst mapStateToProps = state => {\n    return {\n        currentProfile: getCurrentProfileSelect(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateStatus: status => {\n            dispatch(updateStatusThunkCreator(status));\n        },\n        updateProfile: profile => {\n            dispatch(updateProfileThunkCreator(profile));\n        }\n    };\n};\n\nexport const UserConteiner = connect(mapStateToProps, mapDispatchToProps)(User);","import React, {useState} from \"react\";\nimport {Loader} from \"../../loader/Loader\";\nimport {UserInfoConteiner} from \"./UserInfo/UserInfoConteiner\";\n\nexport const User = ({currentProfile, updateStatus, updateProfile}) => {\n    const [editMode, changeEditMode] = useState(false);\n\n    const onSubmit = formData => {\n        updateStatus(formData.status);\n    };\n\n    const updatedProfile = formData => {\n        updateProfile(formData);\n        changeEditMode(false);\n    };\n\n    return currentProfile ? <UserInfoConteiner editMode={editMode} changeEditMode={changeEditMode} onSubmit={onSubmit} updatedProfile={updatedProfile} /> : <Loader/>\n};","import React from \"react\";\nimport MyPostStyle from \"./myPost.module.scss\";\n\nexport const MyPost = ({postData}) => {\n    const post = React.createRef();\n\n    return (\n        <div ref={post} className={MyPostStyle.myPost}>\n            <div className={MyPostStyle.img}></div>\n            <div className={MyPostStyle.textWrap}>\n                <p className={MyPostStyle.text}>{postData.text}</p>\n            </div>\n        </div>\n    );\n};\n","import {MyPost} from \"./MyPost\";\r\nimport React from \"react\";\r\n\r\nexport const MyPostArrays = ({userComment}) => {\r\n    return (\r\n        userComment.map((item, index) => {\r\n            const postData = {\r\n                text: item.comment,\r\n                status: userComment,\r\n                index: index\r\n            };\r\n\r\n            return (\r\n                <MyPost\r\n                    postData={postData}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n    );\r\n};","import React from \"react\";\nimport style from \"./postForm.module.scss\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport {setPostValidation} from \"../../../utils/validate/validate\";\n\nexport const PostForm = ({onSubmit}) => {\n    const submittingForm = (value, resetForm) => {\n        onSubmit(value);\n        resetForm();\n    };\n\n    return (\n        <Formik initialValues={{postText: \"\"}} onSubmit={(value, {resetForm}) => submittingForm(value, resetForm)} validationSchema={setPostValidation}>\n            <Form className={style.formSendPost}>\n                <h3 className={style.formTitle}>My Post</h3>\n                <ErrorMessage name={\"postText\"}/>\n                <Field name={\"postText\"} type={\"text\"} component=\"input\" className={style.formInput}/>\n                <button type=\"submit\" className={style.formBtn}>send</button>\n            </Form>\n        </Formik>\n    )\n};","import React from \"react\";\nimport {UserConteiner} from \"./user/UserConteiner\";\nimport {MyPostArrays} from \"./myPost/MyPostArrays\";\nimport {PostForm} from \"./profileForm/postForm\";\n\nexport const Profile = ({addYourMessage, userData}) => {\n    const addPost = \"profile/ADD POST\";\n    const callAddYourMessage = value => addYourMessage(value, addPost);\n\n    return (\n        <div>\n            <UserConteiner userId={userData.userId}/>\n            <PostForm onSubmit={callAddYourMessage}/>\n            <div><MyPostArrays userComment={userData.userComment}/></div>\n        </div>\n    );\n};","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Profile} from \"./Profile\";\nimport {withRouter} from \"react-router-dom\";\nimport {\n    addPostActionCreator,\n    getStatusThunkCreator,\n    profileThunkCreator, setIsUpdateProfileActionCreator, setUpdatePhotoActionCreator,\n} from \"../../state/reducers/profileReducer\";\nimport {compose} from \"redux\";\nimport {getMyProfileOnHeaderThunkCreator} from \"../../state/reducers/authReducer\";\nimport {\n    getCurrentProfileSelect,\n    getIdSelect,\n    getIsUpdatePhoto, getIsUpdateProfileSelect,\n    getUserCommentSelect\n} from \"../../utils/reselect/reselect\";\n\nexport const ProfileConteinerAPI = (props) => {\n    const userData = {\n        userId: !!props.match.params.userId,\n        userComment: [...props.userComment]\n    };\n\n    useEffect(() => {\n        if (!props.match.params.userId && !props.userId) {\n            props.getMyProfile();\n        };\n\n        props.profileThunk(props.match.params.userId || props.userId);\n        props.getStatus(props.match.params.userId || props.userId);\n    }, []);\n\n    useEffect(() => {\n        if (props.isUpdatePhoto) {\n            props.profileThunk(props.userId);\n            props.setIsUpdatePhoto(false);\n        };\n    });\n\n    useEffect(() => {\n        if (props.isUpdatedProfile) {\n            props.profileThunk(props.userId);\n            props.changeIsUpdatedProfile(false);\n        };\n    });\n\n    return <Profile userData={userData} addYourMessage={props.addYourMessage}/>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        userComment: getUserCommentSelect(state),\n        userId: getIdSelect(state),\n        isUpdatePhoto: getIsUpdatePhoto(state),\n        profile: getCurrentProfileSelect(state),\n        isUpdatedProfile: getIsUpdateProfileSelect(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        profileThunk: id => {\n            dispatch(profileThunkCreator(id));\n        },\n        getStatus: userId => {\n            dispatch(getStatusThunkCreator(userId));\n        },\n        getMyProfile: () => {\n            dispatch(getMyProfileOnHeaderThunkCreator())\n        },\n        addYourMessage: (input, textChecker) => {\n            dispatch(addPostActionCreator(input, textChecker));\n        },\n        setIsUpdatePhoto: isUpdate => {\n            dispatch(setUpdatePhotoActionCreator(isUpdate));\n        },\n        changeIsUpdatedProfile: isUpdated => {\n            dispatch(setIsUpdateProfileActionCreator(isUpdated))\n        }\n    };\n};\n\nconst ProfileConteiner = compose(connect(mapStateToProps, mapDispatchToProps), withRouter)(ProfileConteinerAPI);\nexport default ProfileConteiner;","import * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport {ErrorMessage} from \"../../component/common/FormComponent/FormComponent\";\r\n\r\nconst setSettingCreator = (min, max) => Yup.string().min(min, <ErrorMessage/>).max(max, <ErrorMessage/>).required(<ErrorMessage/>);\r\nconst setStartCreator   = setting => Yup.object().shape(setting);\r\n\r\nexport const setStatusValidation        = setStartCreator({status: setSettingCreator(1, 50)});\r\nexport const setPostValidation          = setStartCreator({postText: setSettingCreator(1, 50)});\r\nexport const setMessageValidation       = setStartCreator({messageText: setSettingCreator(1, 50)});\r\nexport const setProfileDataValidation   = setStartCreator({\r\n    fullName: setSettingCreator(1, 50),\r\n    aboutMe: setSettingCreator(1, 50),\r\n    lookingForAJob: setSettingCreator(1, 50),\r\n    lookingForAJobDescription: setSettingCreator(1, 50),\r\n    vk: setSettingCreator(1, 50),\r\n    facebook: setSettingCreator(1, 50),\r\n    github: setSettingCreator(1, 50),\r\n});\r\n\r\n"],"sourceRoot":""}