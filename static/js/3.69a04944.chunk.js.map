{"version":3,"sources":["component/message/message.module.scss","component/message/messageForm/messageForm.module.scss","component/message/myMessage/myMessege.module.scss","component/message/messageForm/MessageFormConteiner.js","component/message/messageForm/MessageForm.js","component/message/myMessage/MyMessage.js","component/message/myMessage/MyMessageArrays.js","component/message/MessegeConteiner.js","component/message/Message.js"],"names":["module","exports","MessageFormConteiner","connect","state","inputValue","getMessageInputValueSelect","onSubmit","submittingForm","value","resetForm","initialValues","messageText","validationSchema","setMessageValidation","className","style","formSendPost","formTitle","name","type","component","formInput","formBtn","MyMessage","text","MyMessageStyle","myMessage","img","textWrap","answer","MyMessageArrays","messageList","map","item","index","MessageConteiner","getMessageListSelect","dispatch","addYourMessage","input","textChecker","addPostActionCreator","messageStyle","message","listMessage","callAddYourMessage"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,oBCAnKD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,uBAAuB,SAAW,4BAA4B,KAAO,wBAAwB,OAAS,4B,mICa1JC,EAAuBC,aAVZ,SAAAC,GACpB,MAAO,CACHC,WAAYC,YAA2BF,OAIpB,WACvB,MAAO,KAGyBD,ECTT,SAAC,GAAgB,IAAfI,EAAc,EAAdA,SACnBC,EAAiB,SAACC,EAAOC,GAC3BH,EAASE,GACTC,KAGJ,OACI,cAAC,IAAD,CAAQC,cAAe,CAACC,YAAa,IAAKL,SAAU,SAACE,EAAD,OAASC,EAAT,EAASA,UAAT,OAAwBF,EAAeC,EAAOC,IAAYG,iBAAkBC,IAAhI,SACI,eAAC,IAAD,CAAMC,UAAWC,IAAMC,aAAvB,UACI,oBAAIF,UAAWC,IAAME,UAArB,qBACA,cAAC,IAAD,CAAcC,KAAM,gBACpB,cAAC,IAAD,CAAOA,KAAM,cAAeC,KAAM,OAAQC,UAAU,QAAQN,UAAWC,IAAMM,YAC7E,wBAAQF,KAAK,SAASL,UAAWC,IAAMO,QAAvC,0B,kBCdHC,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACI,sBAAKV,UAAWW,IAAeC,UAA/B,UACI,qBAAKZ,UAAWW,IAAeE,MAC/B,sBAAKb,UAAWW,IAAeG,SAA/B,UACI,mBAAGd,UAAWW,IAAeD,KAA7B,SAAoCA,IACpC,wBAAQV,UAAWW,IAAeI,OAAlC,qECNHC,EAAkB,SAAC,GAAD,SAAEC,YAA6BC,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAAuBV,KAAMS,EAAKT,MAAlBU,OCiB7FC,G,OAAmBjC,aAdD,SAAAC,GACpB,MAAO,CACH4B,YAAaK,YAAqBjC,OAIf,SAAAkC,GACvB,MAAO,CACHC,eAAgB,SAACC,EAAOC,GACpBH,EAASI,YAAqBF,EAAOC,QAKxBtC,ECfF,SAAC,GAAmC,IAAlC6B,EAAiC,EAAjCA,YAAaO,EAAoB,EAApBA,eAOlC,OACI,sBAAKxB,UAAW4B,IAAaC,QAA7B,UACI,qBAAK7B,UAAW4B,IAAaE,YAA7B,SAA0C,cAAC,EAAD,CAAiBb,YAAaA,MACxE,cAAC9B,EAAD,CAAsBK,SAAU,SAAAE,GAAK,OAPlB,SAAAA,GACvB8B,EAAe9B,EAHwB,uBASMqC,CAAmBrC,aDMzD2B","file":"static/js/3.69a04944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__1O64f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSendPost\":\"messageForm_formSendPost__1rEcR\",\"formTitle\":\"messageForm_formTitle__386zR\",\"formInput\":\"messageForm_formInput__18iuN\",\"formBtn\":\"messageForm_formBtn__3ZKY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myMessage\":\"myMessege_myMessage__37YXA\",\"img\":\"myMessege_img__3uPPf\",\"textWrap\":\"myMessege_textWrap__1Q5p4\",\"text\":\"myMessege_text__3lbfn\",\"answer\":\"myMessege_answer__3FQzI\"};","import {connect} from \"react-redux\";\nimport {MessageForm} from \"./MessageForm\";\nimport {getMessageInputValueSelect} from \"../../../utils/reselect/reselect\";\n\nconst mapStateToProps = state => {\n    return {\n        inputValue: getMessageInputValueSelect(state)\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nexport const MessageFormConteiner = connect(mapStateToProps, mapDispatchToProps)(MessageForm);","import React from \"react\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport {setMessageValidation} from \"../../../utils/validate/validate\";\nimport style from \"./messageForm.module.scss\";\n\nexport const MessageForm = ({onSubmit}) => {\n    const submittingForm = (value, resetForm) => {\n        onSubmit(value);\n        resetForm();\n    };\n\n    return (\n        <Formik initialValues={{messageText: \"\"}} onSubmit={(value, {resetForm}) => submittingForm(value, resetForm)} validationSchema={setMessageValidation}>\n            <Form className={style.formSendPost}>\n                <h3 className={style.formTitle}>My Post</h3>\n                <ErrorMessage name={\"messageText\"}/>\n                <Field name={\"messageText\"} type={\"text\"} component=\"input\" className={style.formInput}/>\n                <button type=\"submit\" className={style.formBtn}>send</button>\n            </Form>\n        </Formik>\n    );\n};","import React from \"react\";\nimport MyMessageStyle from \"./myMessege.module.scss\";\n\nexport const MyMessage = ({text}) => {\n    return (\n        <div className={MyMessageStyle.myMessage}>\n            <div className={MyMessageStyle.img}></div>\n            <div className={MyMessageStyle.textWrap}>\n                <p className={MyMessageStyle.text}>{text}</p>\n                <button className={MyMessageStyle.answer}>Ответить</button>\n            </div>\n        </div>\n    );\n};","import {MyMessage} from \"./MyMessage\";\r\nimport React from \"react\";\r\n\r\nexport const MyMessageArrays = ({messageList}) => messageList.map((item, index) => <MyMessage key={index} text={item.text}/>);\r\n","import {connect} from \"react-redux\";\nimport {getMessageListSelect} from \"../../utils/reselect/reselect\";\nimport {addPostActionCreator} from \"../../state/reducers/profileReducer\";\nimport {Message} from \"./Message\";\nimport UsersConteiner from \"../users/UsersConteiner\";\n\nconst mapStateToProps = state => {\n    return {\n        messageList: getMessageListSelect(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addYourMessage: (input, textChecker) => {\n            dispatch(addPostActionCreator(input, textChecker));\n        }\n    };\n};\n\nconst MessageConteiner = connect(mapStateToProps, mapDispatchToProps)(Message);\nexport default MessageConteiner;","import React from \"react\";\nimport messageStyle from \"./message.module.scss\";\nimport {MessageFormConteiner} from \"./messageForm/MessageFormConteiner\";\nimport {MyMessageArrays} from \"./myMessage/MyMessageArrays\";\n\nexport const Message = ({messageList, addYourMessage}) => {\n    const addMessageCheckerForMessageChecker = \"message/ADD MESSAGE\";\n\n    const callAddYourMessage = value => {\n        addYourMessage(value, addMessageCheckerForMessageChecker);\n    };\n\n    return (\n        <div className={messageStyle.message}>\n            <div className={messageStyle.listMessage}><MyMessageArrays messageList={messageList}/></div>\n            <MessageFormConteiner onSubmit={value => callAddYourMessage(value)} />\n        </div>\n    );\n};"],"sourceRoot":""}